@model RayaWSoffara.Models.RegisterModel
@{
    ViewBag.Title = "التسجيل";
}

<div class="clear-fix"></div>
<div id="registration_container">
    <div class="title">
        <span>@ViewBag.Title</span>
    </div>

    <div class="clear-fix"></div>

    @using (Html.BeginForm("Register", "Account", null, FormMethod.Post, new { @id = "form", @name = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()

        <div id="reg_div">
            <div class="form-group">
                <label class="pull-left">الأسم الأول<span class="mandatory">*</span></label>
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
            <div class="form-group">
                <label class="pull-left">أسم العائلة<span class="mandatory">*</span></label>
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
            <div class="form-group">
                <label class="pull-left">أسم المستخدم<span class="mandatory">*</span></label>
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", onfocusout = "checkusername($(this).val())" })
                @Html.ValidationMessageFor(model => model.UserName)
                <div class="pull-right">
                    <div class="full_width" id="tick_div"></div>
                </div>
            </div>
            <div class="form-group">
                <label class="pull-left">البريد الالكتروني<span class="mandatory">*</span></label>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", onfocusout = "checkemail($(this).val())" })
                @Html.ValidationMessageFor(model => model.Email)
                <div class="pull-right">
                    <div class="full_width" id="email_tick_div"></div>
                </div>
            </div>
            <div class="form-group">
                <label class="pull-left">كلمة السر<span class="mandatory">*</span></label>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
            <div class="form-group">
                <label class="pull-left">تأكيد كلمة السر<span class="mandatory">*</span></label>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label class="pull-left">البلد</label>
                <select name="country" class="form-control">
                @foreach (var item in ViewBag.Countries)
                {
                    <option value="@item">@item</option>
                }
                </select>
                @Html.ValidationMessageFor(model => model.Country)
            </div>
        </div>
        <div id="btn_reg_div">
            <input type="submit" value="تسجيل" id="btn_reg" class="buttons" />
        </div>
    }
</div>

<div class="loading hidden">
    <div>
        <div class="sk-fading-circle">
            <div class="sk-circle1 sk-circle"></div>
            <div class="sk-circle2 sk-circle"></div>
            <div class="sk-circle3 sk-circle"></div>
            <div class="sk-circle4 sk-circle"></div>
            <div class="sk-circle5 sk-circle"></div>
            <div class="sk-circle6 sk-circle"></div>
            <div class="sk-circle7 sk-circle"></div>
            <div class="sk-circle8 sk-circle"></div>
            <div class="sk-circle9 sk-circle"></div>
            <div class="sk-circle10 sk-circle"></div>
            <div class="sk-circle11 sk-circle"></div>
            <div class="sk-circle12 sk-circle"></div>
        </div>
    </div>
</div>

<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    function checkusername(username) {
        $.ajax({
            type: 'POST',
            url: '/Account/DoesUserNameExist',
            data: { UserName: username },
            beforeSend: function () {
                $(".loading").removeClass("hidden");
            },
            success: function (data) {
                if (data == 'True' && username != "") {
                    $('#tick_div').html('');
                    $('#tick_div').append('<img src="/Content/Images/icon_tick.png" id="icon_tick"/>');
                } else if (data == 'False') {
                    $('#tick_div').html('');
                    $('#tick_div').append('<img src="/Content/Images/false_tick.png" id="icon_tick" class="false_tick" />');
                }
                $(".loading").addClass("hidden");
                return data;
            },
            error: function () {
                $(".loading").addClass("hidden");
            }
        });
    }

    function isValidEmailAddress(emailAddress) {
        var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        return (filter.test(emailAddress));
    };

    function checkemail(email) {
        if (isValidEmailAddress(email)) {
            $.ajax({
                type: 'POST',
                url: '/Account/DoesUserEmailExist',
                data: { Email: email },
                beforeSend: function () {
                    $('#myModal').modal({
                        show: true,
                        backdrop: 'static',
                        keyboard: false
                    })
                },
                success: function (data) {
                    $('#myModal').modal('hide');
                    if (data == 'False' && email != "") {
                        $('#email_tick_div').html('');
                        $('#email_tick_div').append('<img src="/Content/Images/icon_tick.png" id="icon_tick"/>');
                    } else if (data == 'True') {
                        $('#email_tick_div').html('');
                        $('#email_tick_div').append('<img src="/Content/Images/false_tick.png" id="icon_tick" class="false_tick" />');
                    }
                    return data;
                },
                error: function () {
                    $('#myModal').modal('hide');
                }
            });
        }
    }

    jQuery.validator.addMethod("UsernameExist", function (value, element) {
        var result = "";
        $.ajax({
            type: 'POST',
            url: '/Account/DoesUserNameExist',
            data: { UserName: value },
            async: false,
            success: function (data) {
                if (data == 'True') {
                    result = 'true';
                } else {
                    result = 'false';
                }
            }
        });
        return (result == 'true');
    }, "إسم المستخدم مسجل. من فضلك أختر إسم آخر.");

    jQuery.validator.addMethod("UserEmailExist", function (value, element) {
        var result = "";
        $.ajax({
            type: 'POST',
            url: '/Account/DoesUserEmailExist',
            data: { Email: value },
            async: false,
            success: function (data) {
                if (data == 'False') {
                    result = 'true';
                } else {
                    result = 'false';
                }
            }
        });
        return (result == 'true');
    }, "البريد الإلكتروني مسجل.");

    $("#form").validate({
        rules: {
            FirstName: "required",
            LastName: "required",
            UserName: {
                required: true,
                UsernameExist: true
            },
            Password: {
                required: true,
                minlength: 6
            },
            ConfirmPassword: {
                required: true,
                equalTo: "#Password"
            },
            Country: "required",
            Email: {
                required: true,
                email: true,
                UserEmailExist: true
            }
        },
        messages: {
            FirstName: "يجب إدخال الاسم الاول",
            LastName: "يجب إدخال إسم العائلة",
            UserName: {
                required: "يجب إدخال إسم المستخدم"
            },
            Password: {
                required: "يجب إدخال كلمة السر",
                minlength: "يجب أن تكون على الأقل {6} أحرف."
            },
            ConfirmPassword: {
                required: "يجب إدخال تأكيد كلمة السر",
                equalTo: "كلمة السر غير متطابقة."
            },
            Country: "يجب إدخال البلد .",
            Email: {
                required: "يجب إدخال البريد الالكتروني.",
                email: "البريد الالكتروني غير صحيح."
            }
        }
    });
</script>
